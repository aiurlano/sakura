#!/usr/bin/env ruby

=begin

  ############################################################
  @author:    Riccardo Carlesso
  @email:     riccardo.carlesso@gmail.com
  @maturity:  development
  @language:  Ruby
  @synopsis:  dumps command into a history file
  @tags:      development, rcarlesso, test
  @description:
   This script tries to remember what you just did on the CLI 
   for future use. It does it by recording on a directory.
   Basically it's a persistent history
 ############################################################

=end

  require 'optparse'       # http://ruby.about.com/od/advancedruby/a/optionparser.htm
  require 'socket'  

  # Program constants, automagically picked up by RicLib
  # More configuration could be written in:
  #    $SVNHOME/etc/ricsvn/<FILENAME>.yml
  # That would go into the variable '$prog_conf_d'
  $myconf = {
    :app_name            => 'remember',
    :remember_dir        => '~/remember',
  }

  $PROG_VER = '0.9.2'
  $DEBUG    = false

  def usage(comment=nil)
    puts "#{$0} v.#{$PROG_VER}"
    puts "Usage: #{File.basename $0} [-dhjv] [-l LOGFILE] <COMMAND> <TO> <ISSUE>"
    puts comment if comment
    #exit 11
  end

  def main
    debug_on 'Just created script, presuming u need some debug. TODO REMOVE ME when everything works!' if $DEBUG
      # Maybe you may want to check on ARGV
    path = File.expand_path($myconf[:remember_dir]) # for normal users
    path = File.expand_path(ENV['SVNHOME'] + "/var/remember/" ) if ENV['SVNHOME'] # for Riccardo
    logfile = path +"/all"
    unless ARGV.size > 0
      usage "Give me at least 1 argument!"
      puts "\nTry: cat '#{logfile}'\n\n"
      puts `cat '#{logfile}'`
      exit 1
    end
    # Your code goes here...
    puts `mkdir -p '#{path}'`
    commands= ARGV.join ' '
    File.open(logfile, 'a') { |f| f.write "#{Time.now} #{Socket.gethostname} [#{ENV['USER']}] #{commands}\n" }
    puts "#Remembering:  '''#{commands}'''"
    puts "#Written file: #{logfile}"
    system(commands)
  end

  main()
